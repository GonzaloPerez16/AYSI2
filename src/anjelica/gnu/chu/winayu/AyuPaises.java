package gnu.chu.winayu;
/**
 *
 * <p>Título: AyuPaises</p>
 * <p>Descripción: Ventana Para ayuda de Paises </p>
 *
 * <p>Copyright: Copyright (c) 2005-2016
 *  Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo
 *  los términos de la Licencia Pública General de GNU segun es publicada por
 *  la Free Software Foundation, bien de la versión 2 de dicha Licencia
 *  o bien (según su elección) de cualquier versión posterior.
 *  Este programa se distribuye con la esperanza de que sea útil,
 *  pero SIN NINGUNA GARANTIA, incluso sin la garantía MERCANTIL implícita
 *  o sin garantizar la CONVENIENCIA PARA UN PROPOSITO PARTICULAR.
 *  Véase la Licencia Pública General de GNU para más detalles.
 *  Debería haber recibido una copia de la Licencia Pública General junto con este programa.
 *  Si no ha sido así, escriba a la Free Software Foundation, Inc.,
 *  en 675 Mass Ave, Cambridge, MA 02139, EEUU.
 * </p>
 * <p>Empresa: miSL</p>
 * @author chuchi P
 * @version 1.0
 */
import gnu.chu.controles.StatusBar;
import gnu.chu.sql.DatosTabla;
import gnu.chu.utilidades.EntornoUsuario;
import gnu.chu.utilidades.Iconos;
import gnu.chu.utilidades.ventana;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JLayeredPane;

public class AyuPaises extends ventana {
    private boolean chose=false;
    
    
    /** Creates new form AyuTid */
    public AyuPaises() {
        initComponents();
    }
    
 public AyuPaises(EntornoUsuario e, JLayeredPane fr, DatosTabla dt)
  {
    setTitulo("Ayuda Paises");
    
    EU = e;
    eje = false;
    vl=fr;
    if (dt != null)
      dtCon1 = dt;
    try
    {
      jbInit();
    }
    catch (Exception k)
    {
      ErrorInit(k);
    }
  }

  private void jbInit() throws Exception
  {
    statusBar = new StatusBar(this);
    iniciarFrame();
    
    this.setIconifiable(false);
  //  this.setResizable(false);
    this.setMaximizable(false);
    if (dtCon1 == null)
      conecta();
    
    initComponents();
    this.getContentPane().add(statusBar, BorderLayout.SOUTH);
    this.setSize(new Dimension(400,300));
  }
    @Override
  public void iniciarVentana() throws Exception
  {
    activarEventos();
    
  }
  
   public boolean getChose() {
        return chose;
    }

    public void setChose(boolean chose) {
        this.chose = chose;
    }
    public void mostrar()
    {
        this.setVisible(true);
        chose=false;
        pai_nombE.requestFocusLater();
    }
 void activarEventos()
  {
    jt.tableView.addMouseListener(new MouseAdapter()
    {
       @Override
      public void mouseClicked(MouseEvent m)
      {
        if (m.getClickCount() > 1 && jt.isVacio() == false)
        {
            chose=true;            
            matar();
        }
      }

    });

    jt.tableView.addKeyListener(new KeyAdapter()
    {
            @Override
      public void keyPressed(KeyEvent e)
      {
        if ((e.getKeyCode() == KeyEvent.VK_INSERT || e.getKeyCode() == KeyEvent.VK_ENTER) && jt.isVacio() == false)
        {
            chose=true;
            matar();
        }
      }
    });
    Baceptar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Baceptar_actionPerformed();
            }
        });
  }
  public String getInicPais()
  {
      return jt.getValString(1);
  }
  public String getNombrePais()
  {
      return jt.getValString(2);
  }

  void Baceptar_actionPerformed()
  {
     chose=false;
     String s="SELECT pai_codi,pai_inic,pai_nomb FROM v_paises where "+
             "  upper(pai_nomb) LIKE '%"+pai_nombE.getText()+"%'"+
             " order by pai_nomb ";
     try {
        if (!dtCon1.select(s))
        {
            msgBox("No encontrados Paises para estas condiciones");
            pai_nombE.requestFocus();
            return;
        }
        jt.setDatos(dtCon1);
        jt.requestFocusInicioLater();
     } catch (SQLException k)
     {
         Error("Error al buscar Paises",k);
     }           
  }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        Pprinc = new gnu.chu.controles.CPanel();
        Pcond = new gnu.chu.controles.CPanel();
        cLabel1 = new gnu.chu.controles.CLabel();
        pai_nombE = new gnu.chu.controles.CTextField();
        Baceptar = new gnu.chu.controles.CButton("Aceptar",Iconos.getImageIcon("check"));
        jt = new gnu.chu.controles.Cgrid(3);
        { ArrayList v=new ArrayList();
            v.add("Cod.");
            v.add("Ini.");
            v.add("Nombre");
            jt.setCabecera(v);
            jt.setAnchoColumna(new int[]{40,40,200});
            jt.setAlinearColumna(new int[]{2,0,0});
            jt.setAjustarGrid(true);
        }

        setPreferredSize(new java.awt.Dimension(422, 217));

        Pprinc.setLayout(new java.awt.GridBagLayout());

        Pcond.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        Pcond.setDefButton(Baceptar);
        Pcond.setMaximumSize(new java.awt.Dimension(399, 28));
        Pcond.setMinimumSize(new java.awt.Dimension(399, 28));
        Pcond.setPreferredSize(new java.awt.Dimension(399, 28));
        Pcond.setLayout(null);

        cLabel1.setText("Pais");
        Pcond.add(cLabel1);
        cLabel1.setBounds(2, 5, 30, 15);

        pai_nombE.setMayusc(true);
        Pcond.add(pai_nombE);
        pai_nombE.setBounds(30, 5, 290, 17);
        Pcond.add(Baceptar);
        Baceptar.setBounds(325, 2, 70, 24);
        Baceptar.getAccessibleContext().setAccessibleDescription("");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 6);
        Pprinc.add(Pcond, gridBagConstraints);

        jt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jt.setMaximumSize(new java.awt.Dimension(393, 300));
        jt.setMinimumSize(new java.awt.Dimension(393, 300));

        javax.swing.GroupLayout jtLayout = new javax.swing.GroupLayout(jt);
        jt.setLayout(jtLayout);
        jtLayout.setHorizontalGroup(
            jtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
        );
        jtLayout.setVerticalGroup(
            jtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 348, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 6);
        Pprinc.add(jt, gridBagConstraints);

        getContentPane().add(Pprinc, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gnu.chu.controles.CButton Baceptar;
    private gnu.chu.controles.CPanel Pcond;
    private gnu.chu.controles.CPanel Pprinc;
    private gnu.chu.controles.CLabel cLabel1;
    private gnu.chu.controles.Cgrid jt;
    private gnu.chu.controles.CTextField pai_nombE;
    // End of variables declaration//GEN-END:variables
}
