/**
 *
 * <p>Título: LotePanel </p>
 * <p>Descripción: Panel con los campos que involucran un lote.
 * Producto, Serie, Ejercicio Lote e Individuo.
 * </p>
 * <p>Copyright: Copyright (c) 2005-2011
 *  Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo
 *  los terminos de la Licencia Pública General de GNU según es publicada por
 *  la Free Software Foundation, bien de la versión 2 de dicha Licencia
 *  o bien (según su elección) de cualquier versión posterior.
 *  Este programa se distribuye con la esperanza de que sea útil,ed
 *  pero SIN NINGUNA GARANTIA, incluso sin la garantía MERCANTIL implícita
 *  o sin garantizar la CONVENIENCIA PARA UN PROPOSITO PARTICULAR.
 *  Véase la Licencia Pública General de GNU para más detalles.
 *  Debería haber recibido una copia de la Licencia Pública General junto con este programa.
 *  Si no ha sido así, escriba a la Free Software Foundation, Inc.,
 *  en 675 Mass Ave, Cambridge, MA 02139, EEUU.
 * </p>
 * <p>Empresa: miSL</p>
 * @author chuchiP
 * @version 1.0
 */
package gnu.chu.camposdb;

import gnu.chu.controles.CInternalFrame;
import gnu.chu.controles.CPanel;
import gnu.chu.sql.DatosTabla;
import gnu.chu.utilidades.EntornoUsuario;
import java.sql.SQLException;
import java.sql.Types;
import javax.swing.JLayeredPane;


public class LotePanel extends CPanel {
    EntornoUsuario EU;
    
    /** Creates new form LotePanel */
    public LotePanel() {
        initComponents();
    }
    public void iniciar(DatosTabla dt,CInternalFrame intFrame,JLayeredPane layPane,EntornoUsuario EU) throws SQLException
    {
        this.EU=EU;
        pro_codiE.iniciar(dt, intFrame, layPane, EU);
    }
    @Override
    public void requestFocus()
    {
        if (pro_codiE!=null)
        {
            if (pro_codiE.isIniciado())
            {
                pro_codiE.requestFocus();
                return;
            }
        }
        super.requestFocus();
    }
    public void setDatos(int proCodi,String proSerie, int ejeNume,int proLote,int proNumind)
    {
        pro_codiE.setValorInt(proCodi,true);
        pro_serieE.setText(proSerie);
        eje_numeE.setValorInt(ejeNume);
        pro_loteE.setValorInt(proLote);
        pro_indivE.setValorInt(proNumind);
    }
    @Override
    public void setEditable(boolean edita)
    {
        pro_codiE.setEditable(edita);
        pro_serieE.setEditable(edita);
        eje_numeE.setEditable(edita);
        pro_loteE.setEditable(edita);
        pro_indivE.setEditable(edita);
    }
    public int getProCodi() {
        return pro_codiE.getValorInt();
    }

    public int getEjeNume() {
        return eje_numeE.getValorInt();
    }

    public int getProLote() {
        return pro_loteE.getValorInt();
    }

    public int getProNumind() {
        return pro_indivE.getValorInt();
    }
    public String getProSerie()
    {
        return pro_serieE.getText();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pro_codiL = new gnu.chu.controles.CLabel();
        pro_codiE = new gnu.chu.camposdb.proPanel();
        PLote1 = new gnu.chu.controles.CPanel();
        pro_serieL = new gnu.chu.controles.CLabel();
        pro_loteE = new gnu.chu.controles.CTextField(Types.DECIMAL,"####9");
        eje_numeL = new gnu.chu.controles.CLabel();
        eje_numeE = new gnu.chu.controles.CTextField(Types.DECIMAL,"###9");
        pro_indivL = new gnu.chu.controles.CLabel();
        pro_indivE = new gnu.chu.controles.CTextField(Types.DECIMAL,"###9");
        pro_loteL = new gnu.chu.controles.CLabel();
        pro_serieE = new gnu.chu.controles.CTextField(Types.CHAR,"X",1);

        setLayout(new java.awt.GridBagLayout());

        pro_codiL.setText("Producto");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(pro_codiL, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        add(pro_codiE, gridBagConstraints);

        PLote1.setMaximumSize(new java.awt.Dimension(100, 18));
        PLote1.setMinimumSize(new java.awt.Dimension(100, 18));
        PLote1.setPreferredSize(new java.awt.Dimension(100, 18));
        PLote1.setLayout(null);

        pro_serieL.setText("Serie");
        PLote1.add(pro_serieL);
        pro_serieL.setBounds(110, 0, 34, 15);
        PLote1.add(pro_loteE);
        pro_loteE.setBounds(210, 0, 47, 17);

        eje_numeL.setText("Ejercicio");
        PLote1.add(eje_numeL);
        eje_numeL.setBounds(0, 0, 46, 15);
        PLote1.add(eje_numeE);
        eje_numeE.setBounds(60, 0, 41, 17);

        pro_indivL.setText("Individuo ");
        PLote1.add(pro_indivL);
        pro_indivL.setBounds(270, 0, 53, 15);
        PLote1.add(pro_indivE);
        pro_indivE.setBounds(330, 0, 36, 17);

        pro_loteL.setText("Lote");
        PLote1.add(pro_loteL);
        pro_loteL.setBounds(180, 0, 34, 15);

        pro_serieE.setAutoNext(true);
        pro_serieE.setMayusc(true);
        PLote1.add(pro_serieE);
        pro_serieE.setBounds(150, 0, 20, 17);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(PLote1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gnu.chu.controles.CPanel PLote1;
    private gnu.chu.controles.CTextField eje_numeE;
    private gnu.chu.controles.CLabel eje_numeL;
    private gnu.chu.camposdb.proPanel pro_codiE;
    private gnu.chu.controles.CLabel pro_codiL;
    private gnu.chu.controles.CTextField pro_indivE;
    private gnu.chu.controles.CLabel pro_indivL;
    private gnu.chu.controles.CTextField pro_loteE;
    private gnu.chu.controles.CLabel pro_loteL;
    private gnu.chu.controles.CTextField pro_serieE;
    private gnu.chu.controles.CLabel pro_serieL;
    // End of variables declaration//GEN-END:variables
}
