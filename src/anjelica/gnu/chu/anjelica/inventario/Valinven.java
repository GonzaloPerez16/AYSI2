/**
 *
 * <p>Título: Valinven </p>
 * <p>Descripción: Valora el inventario
 * <p>Copyright: Copyright (c) 2005-2015
 *  Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo
 *  los terminos de la Licencia Pública General de GNU según es publicada por
 *  la Free Software Foundation, bien de la versión 2 de dicha Licencia
 *  o bien (según su elección) de cualquier versión posterior.
 *  Este programa se distribuye con la esperanza de que sea útil,ed
 *  pero SIN NINGUNA GARANTIA, incluso sin la garantía MERCANTIL implícita
 *  o sin garantizar la CONVENIENCIA PARA UN PROPOSITO PARTICULAR.
 *  Véase la Licencia Pública General de GNU para más detalles.
 *  Debería haber recibido una copia de la Licencia Pública General junto con este programa.
 *  Si no ha sido así, escriba a la Free Software Foundation, Inc.,
 *  en 675 Mass Ave, Cambridge, MA 02139, EEUU.
 * </p>
 * <p>Empresa: miSL</p>
 * @author chuchiP
 * @version 1.0
 */

package gnu.chu.anjelica.inventario;

import gnu.chu.Menu.Principal;
import gnu.chu.anjelica.almacen.MvtosAlma;
import gnu.chu.anjelica.almacen.ActualStkPart;
import gnu.chu.anjelica.almacen.paregalm;
import gnu.chu.controles.StatusBar;
import gnu.chu.interfaces.PAD;
import gnu.chu.sql.DatosTabla;
import gnu.chu.utilidades.*;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.*;
import java.sql.SQLException;
import java.sql.Types;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;


public class Valinven extends ventanaPad implements PAD {
 MvtosAlma mvtosAlm=new MvtosAlma();;
  paregalm pRegAlm;
//  boolean control=false;
  ActualStkPart stkPart;
  int tirCodi;
  boolean DEBUG = false;
  String s;
  
  public Valinven()
  {
    try
    {
      jbInit();
    }
    catch (Exception e)
    {
      Logger.getLogger(Valinven.class.getName()).log(Level.SEVERE, null, e);
    }
  }

  public Valinven(EntornoUsuario eu, Principal p)
  {
    EU = eu;
    vl = p.panel1;
    jf = p;
    eje = true;

    setTitulo("Valorar Inventario");

    try
    {
      if (jf.gestor.apuntar(this))
        jbInit();
      else
        setErrorInit(true);
    }
    catch (Exception e)
    {
      ErrorInit(e);
      setErrorInit(true);
    }
  }

  public Valinven(gnu.chu.anjelica.menu p, EntornoUsuario eu)
  {

    EU = eu;
    vl = p.getLayeredPane();
    setTitulo("Valorar Inventario");
    try
    {
      jbInit();
    }
    catch (Exception e)
    {
      ErrorInit(e);
      setErrorInit(true);
    }
  }
    /** Creates new form Valinven */
    
 private void jbInit() throws Exception {
        statusBar = new StatusBar(this);
        nav = new navegador(this, dtCons, false,navegador.CURYCON);
        iniciarFrame();

        this.setVersion("2015-10-21" );
        strSql = "SELECT * FROM coninvcab where emp_codi = "+EU.em_cod+
            " order by cci_codi";
 
        this.getContentPane().add(nav, BorderLayout.NORTH);
        this.getContentPane().add(statusBar, BorderLayout.SOUTH);
        this.setPad(this);
        navActivarAll();
        dtCons.setLanzaDBCambio(false);
        conecta();
        initComponents();
        confGrid();
        iniciarBotones(Baceptar, Bcancelar);
        this.setSize(new Dimension(617,481));

        nav.insBedit();
        nav.add(nav.btnEdit, null);
        activar(false);

    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pro_codiE = new gnu.chu.camposdb.proPanel();
        pro_nombE = new gnu.chu.controles.CTextField(Types.CHAR, "X", 50);
        prp_pesoE = new gnu.chu.controles.CTextField(Types.DECIMAL, "###9.99");
        prp_preciE = new gnu.chu.controles.CTextField(Types.DECIMAL, "##9.9999");
        lci_numindE = new gnu.chu.controles.CTextField(Types.DECIMAL, "##9");
        Pprinc = new gnu.chu.controles.CPanel();
        Pcabe = new gnu.chu.controles.CPanel();
        emp_codiE = new gnu.chu.camposdb.empPanel();
        cLabel1 = new gnu.chu.controles.CLabel();
        cLabel2 = new gnu.chu.controles.CLabel();
        cci_fecconE = new gnu.chu.controles.CTextField(Types.DATE,"dd-MM-yyyy");
        cLabel3 = new gnu.chu.controles.CLabel();
        cam_codiE = new gnu.chu.controles.CLinkBox();
        cLabel4 = new gnu.chu.controles.CLabel();
        alm_codiE = new gnu.chu.controles.CLinkBox();
        opSinVal = new gnu.chu.controles.CCheckBox();
        cLabel5 = new gnu.chu.controles.CLabel();
        usu_nombE = new gnu.chu.controles.CTextField(Types.CHAR, "X", 15);
        Birlin = new gnu.chu.controles.CButton();
        jt = new gnu.chu.controles.CGridEditable(5){
            public void afterCambiaLinea()
            {
                prp_preciE.selectAll();
            }
        }
        ;
        Ppie = new gnu.chu.controles.CPanel();
        Bvalall = new gnu.chu.controles.CButton();
        Bvallin = new gnu.chu.controles.CButton();
        Baceptar = new gnu.chu.controles.CButton();
        Bcancelar = new gnu.chu.controles.CButton();
        opValcpre = new gnu.chu.controles.CCheckBox();
        cci_codiE = new gnu.chu.controles.CLabel();
        cLabel6 = new gnu.chu.controles.CLabel();
        fecinvE = new gnu.chu.controles.CComboBox();
        opVerDepos = new gnu.chu.controles.CCheckBox();
        cLabel7 = new gnu.chu.controles.CLabel();
        unidTotE = new gnu.chu.controles.CTextField(Types.DECIMAL,"#,##9");
        cLabel8 = new gnu.chu.controles.CLabel();
        kilTotE = new gnu.chu.controles.CTextField(Types.DECIMAL,"###,##9.99");
        impTotE = new gnu.chu.controles.CTextField(Types.DECIMAL,"###,##9.99");
        cLabel9 = new gnu.chu.controles.CLabel();

        pro_codiE.setAncTexto(60);
        pro_codiE.setAutoNext(true);

        pro_nombE.setText("unidTotE");

        prp_pesoE.setText("unidTotE");

        prp_preciE.setText("unidTotE");

        lci_numindE.setText("unidTotE");

        Pprinc.setLayout(new java.awt.GridBagLayout());

        Pcabe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Pcabe.setPreferredSize(new java.awt.Dimension(587, 60));

        emp_codiE.setMinimumSize(new java.awt.Dimension(28, 18));
        emp_codiE.setPreferredSize(new java.awt.Dimension(39, 18));

        cLabel1.setText("Empresa");

        cLabel2.setText("Fecha Control");

        cLabel3.setText("Camara");

        cam_codiE.setAncTexto(30);
        cam_codiE.setMaximumSize(new java.awt.Dimension(73, 18));
        cam_codiE.setMinimumSize(new java.awt.Dimension(73, 18));
        cam_codiE.setPreferredSize(new java.awt.Dimension(73, 18));

        cLabel4.setText("Almacen");

        alm_codiE.setAncTexto(30);
        alm_codiE.setMaximumSize(new java.awt.Dimension(73, 18));
        alm_codiE.setMinimumSize(new java.awt.Dimension(73, 18));
        alm_codiE.setPreferredSize(new java.awt.Dimension(73, 18));

        opSinVal.setText("Pr. sin Val");
        opSinVal.setToolTipText("Ver solo productos sin valorar");
        opSinVal.setMaximumSize(new java.awt.Dimension(87, 18));
        opSinVal.setMinimumSize(new java.awt.Dimension(87, 18));
        opSinVal.setPreferredSize(new java.awt.Dimension(87, 18));

        cLabel5.setText("Usuario");

        usu_nombE.setMinimumSize(new java.awt.Dimension(10, 18));
        usu_nombE.setPreferredSize(new java.awt.Dimension(73, 18));

        Birlin.setBorder(null);

        org.jdesktop.layout.GroupLayout PcabeLayout = new org.jdesktop.layout.GroupLayout(Pcabe);
        Pcabe.setLayout(PcabeLayout);
        PcabeLayout.setHorizontalGroup(
            PcabeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PcabeLayout.createSequentialGroup()
                .addContainerGap()
                .add(PcabeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(PcabeLayout.createSequentialGroup()
                        .add(cLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(4, 4, 4)
                        .add(emp_codiE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(4, 4, 4)
                        .add(cci_fecconE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(cLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(1, 1, 1)
                        .add(cam_codiE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 202, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, PcabeLayout.createSequentialGroup()
                        .add(cLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(7, 7, 7)
                        .add(alm_codiE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(opSinVal, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(18, 18, 18)
                        .add(cLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(usu_nombE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(Birlin, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PcabeLayout.setVerticalGroup(
            PcabeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PcabeLayout.createSequentialGroup()
                .add(PcabeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(PcabeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, emp_codiE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(PcabeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(cam_codiE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(PcabeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(cLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cci_fecconE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(PcabeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(cLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(alm_codiE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(PcabeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(Birlin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(PcabeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(opSinVal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(usu_nombE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        Pprinc.add(Pcabe, gridBagConstraints);

        jt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jt.setMaximumSize(new java.awt.Dimension(500, 201));
        jt.setMinimumSize(new java.awt.Dimension(500, 201));
        jt.setPreferredSize(new java.awt.Dimension(500, 201));
        jt.setProcInsLinea(true);

        org.jdesktop.layout.GroupLayout jtLayout = new org.jdesktop.layout.GroupLayout(jt);
        jt.setLayout(jtLayout);
        jtLayout.setHorizontalGroup(
            jtLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 605, Short.MAX_VALUE)
        );
        jtLayout.setVerticalGroup(
            jtLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 248, Short.MAX_VALUE)
        );

        jt.setCanInsertLinea(false);
        jt.setCanDeleteLinea(false);
        Vector v = new Vector();
        v.addElement("Producto"); // 0
        v.addElement("Descripcion"); // 1
        v.addElement("Cantidad"); // 2
        v.addElement("Precio"); // 3
        v.addElement("N.Piezas"); // 4

        jt.setCabecera(v);
        jt.setAnchoColumna(new int[]
            {80, 200, 60, 60, 60});
        jt.setAlinearColumna(new int[]
            {2, 0, 2, 2, 2});
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        Pprinc.add(jt, gridBagConstraints);

        Ppie.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Ppie.setPreferredSize(new java.awt.Dimension(595, 70));
        Ppie.setQuery(true);
        Ppie.setLayout(null);

        Bvalall.setText("Valorar Todo");
        Ppie.add(Bvalall);
        Bvalall.setBounds(2, 2, 80, 24);

        Bvallin.setText("Valorar Linea (F2)");
        Ppie.add(Bvallin);
        Bvallin.setBounds(100, 2, 100, 24);

        Baceptar.setText("Aceptar");
        Ppie.add(Baceptar);
        Baceptar.setBounds(331, 2, 90, 24);

        Bcancelar.setText("Cancelar");
        Ppie.add(Bcancelar);
        Bcancelar.setBounds(449, 2, 90, 24);

        opValcpre.setText("Incluir Productos ya valorados");
        opValcpre.setMaximumSize(new java.awt.Dimension(214, 18));
        opValcpre.setMinimumSize(new java.awt.Dimension(214, 18));
        opValcpre.setPreferredSize(new java.awt.Dimension(214, 18));
        Ppie.add(opValcpre);
        opValcpre.setBounds(13, 30, 180, 18);

        cci_codiE.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        cci_codiE.setBackground(Color.yellow);
        cci_codiE.setOpaque(true);
        cci_codiE.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Ppie.add(cci_codiE);
        cci_codiE.setBounds(482, 30, 56, 19);

        cLabel6.setText("Fecha Inventario");
        Ppie.add(cLabel6);
        cLabel6.setBounds(227, 31, 102, 15);

        fecinvE.setMinimumSize(new java.awt.Dimension(78, 18));
        fecinvE.setPreferredSize(new java.awt.Dimension(78, 18));
        Ppie.add(fecinvE);
        fecinvE.setBounds(333, 30, 131, 18);

        opVerDepos.setSelected(true);
        opVerDepos.setText("Ver Depositos");
        Ppie.add(opVerDepos);
        opVerDepos.setBounds(220, 2, 91, 17);

        cLabel7.setText("Unidades ");
        Ppie.add(cLabel7);
        cLabel7.setBounds(13, 51, 54, 17);

        unidTotE.setEditable(false);
        Ppie.add(unidTotE);
        unidTotE.setBounds(71, 50, 40, 17);

        cLabel8.setText("Kilos");
        Ppie.add(cLabel8);
        cLabel8.setBounds(180, 50, 35, 17);

        kilTotE.setEditable(false);
        Ppie.add(kilTotE);
        kilTotE.setBounds(220, 50, 80, 17);

        impTotE.setEditable(false);
        Ppie.add(impTotE);
        impTotE.setBounds(464, 50, 80, 17);

        cLabel9.setText("Importe");
        Ppie.add(cLabel9);
        cLabel9.setBounds(390, 50, 57, 17);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        Pprinc.add(Ppie, gridBagConstraints);

        getContentPane().add(Pprinc, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gnu.chu.controles.CButton Baceptar;
    private gnu.chu.controles.CButton Bcancelar;
    private gnu.chu.controles.CButton Birlin;
    private gnu.chu.controles.CButton Bvalall;
    private gnu.chu.controles.CButton Bvallin;
    private gnu.chu.controles.CPanel Pcabe;
    private gnu.chu.controles.CPanel Ppie;
    private gnu.chu.controles.CPanel Pprinc;
    private gnu.chu.controles.CLinkBox alm_codiE;
    private gnu.chu.controles.CLabel cLabel1;
    private gnu.chu.controles.CLabel cLabel2;
    private gnu.chu.controles.CLabel cLabel3;
    private gnu.chu.controles.CLabel cLabel4;
    private gnu.chu.controles.CLabel cLabel5;
    private gnu.chu.controles.CLabel cLabel6;
    private gnu.chu.controles.CLabel cLabel7;
    private gnu.chu.controles.CLabel cLabel8;
    private gnu.chu.controles.CLabel cLabel9;
    private gnu.chu.controles.CLinkBox cam_codiE;
    private gnu.chu.controles.CLabel cci_codiE;
    private gnu.chu.controles.CTextField cci_fecconE;
    private gnu.chu.camposdb.empPanel emp_codiE;
    private gnu.chu.controles.CComboBox fecinvE;
    private gnu.chu.controles.CTextField impTotE;
    private gnu.chu.controles.CGridEditable jt;
    private gnu.chu.controles.CTextField kilTotE;
    private gnu.chu.controles.CTextField lci_numindE;
    private gnu.chu.controles.CCheckBox opSinVal;
    private gnu.chu.controles.CCheckBox opValcpre;
    private gnu.chu.controles.CCheckBox opVerDepos;
    private gnu.chu.camposdb.proPanel pro_codiE;
    private gnu.chu.controles.CTextField pro_nombE;
    private gnu.chu.controles.CTextField prp_pesoE;
    private gnu.chu.controles.CTextField prp_preciE;
    private gnu.chu.controles.CTextField unidTotE;
    private gnu.chu.controles.CTextField usu_nombE;
    // End of variables declaration//GEN-END:variables
  private void confGrid() throws Exception
  {
    ArrayList v1 = new ArrayList();

    pro_codiE.iniciar(dtStat, this, vl, EU);

    pro_codiE.setProNomb(null);
    pro_codiE.setText("");
    pro_codiE.setEnabled(false);
    pro_nombE.setEnabled(false);
    prp_pesoE.setEnabled(false);
    prp_preciE.setEnabled(true);
    lci_numindE.setEnabled(false);
    v1.add(pro_codiE.getFieldProCodi()); // 0
    v1.add(pro_nombE); // 1
    v1.add(prp_pesoE); // 2
    v1.add(prp_preciE); // 3
    v1.add(lci_numindE); // 4
    jt.setCampos(v1);
    jt.setFormatoCampos();
  }
    @Override
  public void iniciarVentana() throws Exception
  {
    emp_codiE.iniciar(dtStat, this, vl, EU);
    MvtosAlma.llenaComboFecInv(dtStat, EU.em_cod, EU.ejercicio, fecinvE);
    Pcabe.setDefButton(Baceptar);
    stkPart = new ActualStkPart(dtAdd,EU.em_cod);
    jt.setButton(KeyEvent.VK_F2, Bvallin);
    stkPart.setVentana(this);
    cam_codiE.setFormato(Types.CHAR, "XX", 2);
    cam_codiE.texto.setMayusc(true);
    gnu.chu.anjelica.pad.pdconfig.llenaDiscr(dtCon1, cam_codiE, "AC", EU.em_cod);

    mvtosAlm.setUsaDocumentos(false);
    mvtosAlm.setIncUltFechaInv(false);


    alm_codiE.setFormato(true);
    alm_codiE.setFormato(Types.DECIMAL, "#9", 2);
    s = "SELECT alm_codi,alm_nomb FROM v_almacen " +
        " ORDER BY alm_codi";
    dtStat.select(s);
    alm_codiE.addDatos(dtStat);

    emp_codiE.setColumnaAlias("emp_codi");
    usu_nombE.setColumnaAlias("usu_nomb");
    cci_fecconE.setColumnaAlias("cci_feccon");
    cam_codiE.setColumnaAlias("cam_codi");
    alm_codiE.setColumnaAlias("alm_codi");
    pRegAlm=new paregalm();
    pRegAlm.iniciar(EU,dtStat,dtAdd,vl,this,dtBloq);
    activarEventos();
    this.setEnabled(true);
//    activar(false);
    activaTodo();
    nav.requestFocus();
    usu_nombE.setEnabled(false);
    nav.setEnabled(navegador.ULTIMO, false);
    nav.setEnabled(navegador.SIGUIENTE, false);
    verDatos(dtCons);
  }
  void activarEventos()
  {
    opVerDepos.addActionListener(new ActionListener()
    {
            @Override
      public void actionPerformed(ActionEvent e)
      {
       verDatLin(dtCons);
      }
    });
//    Bincoin.addActionListener(new ActionListener()
//    {
//      public void actionPerformed(ActionEvent e)
//      {
//        control = true;
//        nav.pulsado = navegador.ADDNEW;
//        PADAddNew();
//      }
//    });

//    Binsinv.addActionListener(new ActionListener()
//    {
//      public void actionPerformed(ActionEvent e)
//      {
//        control = false;
//        nav.pulsado = navegador.ADDNEW;
//        PADAddNew();
//      }
//    });
    Birlin.addFocusListener(new FocusAdapter()
    {
            @Override
      public void focusGained(FocusEvent e)
      {
        if (nav.pulsado != navegador.QUERY)
          Birlin.doClick();
      }
    });
    opSinVal.addActionListener(new ActionListener()
    {
      public void actionPerformed(ActionEvent e)
      {
        verDatos(dtCons);
      }
    });
    Birlin.addActionListener(new ActionListener()
    {
      public void actionPerformed(ActionEvent e)
      {
        Birlin_actionPerformed();
      }
    });
    Bvallin.addActionListener(new ActionListener()
    {
      public void actionPerformed(ActionEvent e)
      {
        Bvallin_actionPerformed();
      }
    });
    Bvalall.addActionListener(new ActionListener()
    {
      public void actionPerformed(ActionEvent e)
      {
        Bvalall_actionPerformed();
      }
    });
    

  }
  /**
   * Valorar TODOS los productos del grid.
   */
  void Bvalall_actionPerformed()
  {
    try {
        if (Formatear.restaDias(fecinvE.getText(), cci_fecconE.getText()) >= 0) {
            msgBox("Fecha Inventario debe ser inferior a fecha Control");
            return;
        }
    } catch (ParseException ex) {
        Error("Error al comparar fechas",ex);
        return;
    }
    jt.requestFocusInicio();
    new miThread("")
    {
            @Override
      public void run()
      {
        msgEspere("Valorando Productos..");
        valorarTodo();
        resetMsgEspere();
        jt.requestFocusInicioLater();
      }
    };
  }
  void valorarTodo()
  {

    
    this.setEnabled(false);
    mensaje("Espere, por favor ... Valorando Productos");

    int nl = jt.getRowCount();
    int n=0;
    try
    {
      String feulin=fecinvE.getText();
//    String feulst, tipMov;
      mvtosAlm.iniciarMvtos(feulin, cci_fecconE.getText(),dtCon1);
      jt.setEnabled(false);
      jt.requestFocusInicio();
      
      for (; n < nl; n++)
      {
        if (jt.getValorDec(n,3) != 0 && !opValcpre.isSelected())
          continue;
        setMensajePopEspere("Valorando Producto: "+jt.getValorInt(n, 0)+ " ("+n+" de "+nl+")",false);
        mvtosAlm.calculaMvtos(jt.getValorInt(n, 0), dtCon1, dtStat, null,null);
        jt.setValor("" +  mvtosAlm.getPrecioStock(),
                    n, 3);
      }
      jt.setEnabled(true);
      
      mensaje("");
      mensajeErr("TODOS los Productos ... Valorados");
    
    }
    catch (Exception k)
    {
      Error("Error al Valorar producto: " + jt.getValInt( n,0), k);
    }
  }
  void Bvallin_actionPerformed()
  {
    try {
      if (Formatear.restaDias(fecinvE.getText(),cci_fecconE.getText())>=0)
      {
            msgBox(("Fecha Inventario debe ser inferior a fecha Control"));
            return;
      }
      int proCodi=jt.getValorInt(0);
      String feulin=fecinvE.getText();
//    String feulst, tipMov;
      mvtosAlm.setIncUltFechaInv(false);
      mvtosAlm.iniciarMvtos(feulin, cci_fecconE.getText(),dtCon1);
      
      mvtosAlm.calculaMvtos(proCodi, dtCon1, dtStat, null,null);
      prp_preciE.setValorDec(mvtosAlm.getPrecioStock());
      mensajeErr("Producto .. Valorado");
      javax.swing.SwingUtilities.invokeLater(new Thread()
      {
                @Override
        public void run()
        {
          jt.requestFocus(jt.getSelectedRow(), jt.getSelectedColumn());

        }
      });
    } catch (Exception k)
    {
      Error("Error al Valorar producto: "+jt.getValInt(0),k);
    }
  }

//  String getFechaInv(int proCodi) throws SQLException
//  {
//      String feulin;
//      s =   "select MAX(rgs_fecha) as cci_feccon from v_regstock as r,v_motregu  as m " +
//        " where "+
//        (proCodi==0?"1=1":" pro_codi = " + proCodi) +
//        " and r.tir_codi = m.tir_codi " +
//        " and M.tir_afestk='=' " +
//        " order by cci_feccon desc ";
//
//    dtStat.select(s);
//    if (dtStat.getObject("cci_feccon") == null)
//      feulin = "01-01-" + EU.ejercicio; // Buscamos desde el principio del año.
//    else
//      feulin = dtStat.getFecha("cci_feccon", "dd-MM-yyyy");
//    feulin="31-12-2009";
//    return feulin;
//  }
 

  void Birlin_actionPerformed()
  {
    if (cci_fecconE.isNull())
    {
      mensajeErr("Introduzca la fecha de Control");
      cci_fecconE.requestFocus();
      return;
    }
    if (cam_codiE.getError() || cam_codiE.getText().trim().equals(""))
    {
      mensajeErr("Camara ... incorrecta");
      cam_codiE.requestFocus();
      return;
    }
    if (alm_codiE.getError() || alm_codiE.getValorInt() == 0)
    {
      mensajeErr("Introduzca Almacen");
      alm_codiE.requestFocus();
      return;
    }

    if (nav.pulsado==navegador.ADDNEW)
    {
      s="SELECT * FROM coninvcab WHERE emp_codi = "+EU.em_cod+
          " and emp_codi = "+emp_codiE.getValorInt()+
          " AND cci_feccon = TO_DATE('"+cci_fecconE.getText()+"','dd-MM-yyyy') "+
          " AND cam_codi = '"+cam_codiE.getText()+"'"+
          " and alm_codi = "+alm_codiE.getValorInt();

      try {
        if (dtBloq.select(s))
        {
          mensajeErr("Registro ya existe .. EDITANDOLO");
          mensaje("Editando el registro");
          verDatos(dtBloq); // Resulta que ya existe.
          nav.pulsado=navegador.EDIT;
        }
      } catch (Exception k)
      {
        Error ("Error al realizar select",k);
        return;
      }
    }
    Pcabe.setEnabled(false);
    activar(true,navegador.EDIT);
    jt.requestFocusInicio();
  }
  /**
   * Verdatos de un datostabla. muestra cabecera y lineas.
   * @param dt DatosTabla
   */
  void verDatos(DatosTabla dt)
  {
    try {
      if (dt.getNOREG())
        return;
      emp_codiE.setValorInt(dt.getInt("emp_codi"));
      cci_codiE.setText(dt.getString("cci_codi"));
      usu_nombE.setText(dt.getString("usu_nomb"));
      cci_fecconE.setText(dt.getFecha("cci_feccon","dd-MM-yyyy"));
      cam_codiE.setText(dt.getString("cam_codi"));
      alm_codiE.setText(dt.getString("alm_codi"));

      verDatLin(dt);
   } catch (Exception k)
   {
    Error("Error al visualizar datos",k);
   }
  }

  void verDatLin(DatosTabla dt)
  {
    try
    {
      double precio;
      String proNomb;
      jt.setEnabled(false);
      jt.removeAllDatos();

      s =
          "select  pro_codi,sum(lci_peso) as lci_peso,sum(lci_numind) as lci_numind from coninvlin as i " +
          " where cci_codi = " + dt.getInt("cci_codi") +
          " and emp_codi = " + dt.getInt("emp_codi") +
          " and  lci_nume <> 0  " +
          (opVerDepos.isSelected()?"":
          " and not exists (SELECT p.pro_codi FROM V_albvenpar as  p, v_albavec as c "+
                    " WHERE c.avc_depos ='D' AND c.emp_codi=p.emp_codi "+
                    " and c.avc_ano=p.avc_ano and c.avc_serie=p.avc_serie "+
                    " and c.avc_nume = p.avc_nume "+
                    " and c.avc_fecalb <= to_date('"+cci_fecconE.getText()+"','dd-MM-yyyy')"+
                    " and p.pro_codi = i.pro_codi "+
                    " and p.avp_ejelot= prp_ano"+
                    " and p.avp_serlot= prp_seri "+
                    " and p.avp_numpar = prp_part"+
                    " and p.avp_numind = prp_indi)")+ // No ponemos la empresa,pues esta obsoleta"
          " group by pro_codi " +
          " ORDER BY pro_codi ";

      if (! dtCon1.select(s))
        return;
      int unidT=0;
      double kilosT=0;
      double importeT=0;
      do
      {
        if (dtCon1.getDouble("lci_peso")==0)
            continue;
        s=" SELECT ipr_prec FROM invprec where pro_codi= "+dtCon1.getInt("pro_codi")+
            " and cci_feccon =  TO_DATE('"+cci_fecconE.getText()+"','dd-MM-yyyy') ";
        if ( dtStat.select(s))
          precio=dtStat.getDouble("ipr_prec");
        else
          precio=0;
        if (opSinVal.isSelected() && precio != 0)
          continue;

        ArrayList v=new ArrayList();
        proNomb=pro_codiE.getNombArt(dtCon1.getInt("pro_codi"));
        if (proNomb==null)
          proNomb="**ARTICULO NO ENCONTRADO**";
        v.add(dtCon1.getString("pro_codi")); // 1
        v.add(proNomb); // 2
        v.add(dtCon1.getString("lci_peso")); // 8
        v.add(""+precio); // 8
        v.add(dtCon1.getString("lci_numind"));
        jt.addLinea(v);
        unidT+=dtCon1.getInt("lci_numind");
        kilosT+=dtCon1.getDouble("lci_peso");
        importeT+=dtCon1.getDouble("lci_peso")*precio;
      } while (dtCon1.next());
      unidTotE.setValorDec(unidT);
      kilTotE.setValorDec(kilosT);
      impTotE.setValorDec(importeT);
      jt.requestFocusInicio();
    } catch (Exception k)
    {
      Error("Error al visualizar datos",k);
    }
  }


  @Override
  public void ej_query1()
  {
    if (Pcabe.getErrorConf() != null)
    {
      mensajeErr("Error en condiciones de busqueda");
      Pcabe.getErrorConf().requestFocus();
      return;
    }
    ArrayList v = new ArrayList();
    v.add(emp_codiE.getStrQuery());
    v.add(cci_fecconE.getStrQuery());
    v.add(cam_codiE.getStrQuery());
    v.add(usu_nombE.getStrQuery());
    v.add(alm_codiE.getStrQuery());

    s = creaWhere("select * from coninvcab ", v);
    s += " ORDER BY cci_codi";
//    debug("Query: "+s);
    activaTodo();
    Pcabe.setQuery(false);

    try
    {
      if (!dtCons.select(s))
      {
        mensaje("");
        mensajeErr("No encontrados Inventarios de Control para estos criterios");
        rgSelect();
        return;
      }
      mensaje("");
      strSql=s;
      rgSelect();
      verDatos(dtCons);
      mensajeErr("Nuevos regisgtros selecionados");
    }
    catch (Exception ex)
    {
      fatalError("Error al buscar Inventarios: ", ex);
    }

  }
  public void canc_query()
  {
    Pcabe.setQuery(false);
    mensaje("");
    verDatos(dtCons);
    mensajeErr("Consulta ... CANCELADA");
    activaTodo();
  }

    @Override
  public void PADEdit()
  {
    activar(true,navegador.EDIT);

    mensaje("Modificar .. Registro");
    opSinVal.setEnabled(false);
    jt.requestFocusInicio();
  }

    @Override
  public void ej_edit1()
  {
    jt.procesaAllFoco();
    try {
      opSinVal.setEnabled(false);
      mensaje("Esperate, tio ... Insertando registros");
      this.setEnabled(false);
      int nLin=jt.getRowCount();
      for (int n=0;n<nLin;n++)
      {
        s="SELECT * FROM invprec where pro_codi = "+jt.getValorInt(n,0)+
            " and cci_feccon = TO_DATE('"+cci_fecconE.getText()+"','dd-MM-yyyy') ";
        if (dtCon1.select(s,true))
        {
          dtCon1.edit(dtCon1.getCondWhere());
          dtCon1.setDato("ipr_prec",jt.getValorDec(n,3));
        }
        else
        {
          dtCon1.addNew("invprec");
          dtCon1.setDato("cci_feccon",cci_fecconE.getText(),"dd-MM-yyyy");
          dtCon1.setDato("pro_codi",jt.getValorInt(n,0));
          dtCon1.setDato("ipr_prec",jt.getValorDec(n,3));
        }
        dtCon1.update(stUp);
      }
      ctUp.commit();

      this.setEnabled(true);
      mensaje("");
      mensajeErr("Registros ... MODIFICADO");
      activaTodo();
      dtCon1.setStatement(null);
    } catch (Exception k)
    {
      Error("ERROR AL modificar Registro",k);
      return;
    }
  }
  public void canc_edit()
  {
      mensaje("");
      mensajeErr("Modificaci�n ... CANCELADA");
      verDatos(dtCons);
      activaTodo();
  }

    @Override
  public void PADQuery()
  {
    activar(true, navegador.ADDNEW);
    Baceptar.setEnabled(true);
//    Pcabe.setEnabled(false);
    usu_nombE.setEnabled(true);
    Pcabe.setQuery(true);
    Pcabe.resetTexto();
    emp_codiE.setValorInt(EU.em_cod);
    cci_fecconE.requestFocus();
    mensaje("Introduzca Criterios de Busqueda");
  }



  public void ej_delete1()
  {
  }
  public void canc_delete()
  {
  }
  

 
  public void activar(boolean b)
  {
    activar(b,navegador.ADDNEW);
    activar(b,navegador.EDIT);
  }
  void activar(boolean b, int modo)
  {
   
//    Bincoin.setEnabled(!b);
    switch (modo)
    {
      case navegador.ADDNEW:
//        Pcabe.setEnabled(b);
        opSinVal.setEnabled(true);
        cci_fecconE.setEnabled(b);
        alm_codiE.setEnabled(b);
        cam_codiE.setEnabled(b);
        Pcabe.setEnabled(b);
        break;
      case navegador.EDIT:
//        Pprod.setEnabled(b);
        jt.setEnabled(b);
        Bvalall.setEnabled(b);
        Bvallin.setEnabled(b);
        opSinVal.setEnabled(b);
        Baceptar.setEnabled(b);
    }
    Bcancelar.setEnabled(b);
    opVerDepos.setEnabled(!b);


  }

  public void PADPrimero()
  {
    verDatos(dtCons);
  }

  public void PADAnterior()
  {
    verDatos(dtCons);

  }

  public void PADSiguiente()
  {
   verDatos(dtCons);
  }

  public void PADUltimo()
  {
    verDatos(dtCons);
  }

  public void PADAddNew()
  {
//    statusBar.setEnabled(false);
//    opSinVal.setEnabled(false);
//    Pinsertar.resetTexto();
//    opResetear.setSelected(true);
//    pro_artconE.setEnabled(true);
//    mensaje("Insertar  .. Inventario");
//    alm_codiE.setEnabled(true);
//    Pcabe.setEnabled(true);
////    cam_codiE.setEnabled(control);
//    Pcabe.setMaximumSize(new Dimension(589, 90));
//    Pcabe.setMinimumSize(new Dimension(589, 90));
//    Pcabe.setPreferredSize(new Dimension(589, 90));
//    Pinsertar.setEnabled(true);
//    this.repaint();
//    this.validate();
//    this.pack();
//
//    javax.swing.SwingUtilities.invokeLater(new Thread()
//    {
//      public void run()
//      {
//        valinve.this.repaint();
//        valinve.this.validate();
//        valinve.this.pack();
//
//        valinve.this.repaint();
//      }
//    });
//
//    cci_fecconE.setEnabled(true);
//    Binsinv.setEnabled(false);
////    Bincoin.setEnabled(false);
//    Baceptar.setEnabled(true);
//    Bcancelar.setEnabled(true);
//    cci_fecconE.requestFocus();
  }

    @Override
  public void rgSelect() throws SQLException
  {
//    dtCons.setFetchSize(50);
    super.rgSelect();
    if (dtCons.getNOREG())
      return;
    dtCons.last();

    nav.setEnabled(navegador.ULTIMO, false);
    nav.setEnabled(navegador.SIGUIENTE, false);
  }

    public void ej_addnew1() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void canc_addnew() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
