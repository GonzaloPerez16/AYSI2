package gnu.chu.anjelica.ventas;

import gnu.chu.controles.CPanel;
import gnu.chu.sql.DatosTabla;
import java.sql.SQLException;
import java.sql.Types;
import java.util.Hashtable;

public class PTransVenta extends CPanel
{
   int avcId; // Numero Albaran Venta
   DatosTabla dt;
    final static String CAJAS="C";
    final static String BOLSAS="B";
    final static String PALETS="P";
    final static String COLGADO="F";
    
    public PTransVenta() {
        initComponents();
    }
    
    public void iniciarPanel(DatosTabla dt) throws SQLException
    {
        this.dt=dt;
        String s="select tra_codi,tra_nomb from v_transventext order by tra_nomb";
        dt.select(s);
        tra_codiE.addDatos(dt);
    }
    public void setAvcId(int avcId)
    {
        this.avcId=avcId;
    }
    public int getAvcId()
    {
        return this.avcId;
    }
    /**
     * 
     * @throws SQLException 
     */
    public void actualizaPantalla() throws SQLException
    {
        resetUnidades();
        if (avcId==0)
            return;
        String s="select * from albventra where avc_id = "+avcId;
        if (!dt.select(s))
            return;
        do
        {
            String tipo=dt.getString("avt_tipo");
            switch (tipo)
            {
                case CAJAS:
                     avt_numcajE.setValorInt(dt.getInt("avt_unid"));
                     break;
                case BOLSAS:
                    avt_numbolE.setValorInt(dt.getInt("avt_unid"));
                    break;
                case COLGADO:
                    avt_numcolE.setValorInt(dt.getInt("avt_unid"));
                    break;
                case PALETS:
                    avt_numpalE.setValorInt(dt.getInt("avt_unid"));          
            }  
        } while (dt.next());
    }
    /**
     * 
     * @throws SQLException 
     */
    void guardaValores(boolean commit) throws SQLException
    {
        guarda(BOLSAS,avt_numbolE.getValorInt());
        guarda(CAJAS,avt_numcajE.getValorInt());
        guarda(PALETS,avt_numpalE.getValorInt()); 
        guarda(COLGADO,avt_numcolE.getValorInt());
        if (commit)
            dt.commit();
    }
    /**
     * Guarda o actualiza valor para un tipo bulto
     * @param tipo
     * @param unid
     * @throws SQLException 
     */
    void guarda(String tipo,int unid) throws SQLException
    {
        if (dt.select("select * from albventra where avc_id="+avcId+" and avt_tipo='"+tipo+"'",true))
            dt.edit();
        else
        {
            dt.addNew("albventra");
            dt.setDato("avc_id",avcId);
            dt.setDato("avt_tipo",tipo);
        }      
        dt.setDato("avt_unid",unid);
        dt.update();
    }
    @Override
    public void resetTexto()
    {
        resetUnidades();
    }
    public void resetUnidades()
    {
        avt_numcajE.resetTexto();
        avt_numbolE.resetTexto();
        avt_numpalE.resetTexto();
        avt_numcolE.resetTexto();
    }
    
    /**
     * Devuelve numero de unidades del tipo bulto elegido
     * @param tipo
     * @return -1 si no es un tipo valido
     */
    public int getUnidades(String tipo)
    {
        switch (tipo)
        {
            case CAJAS:
                return avt_numcajE.getValorInt();
            case BOLSAS:
                return avt_numbolE.getValorInt();
            case COLGADO:
                return avt_numcolE.getValorInt();
            case PALETS:
                return avt_numpalE.getValorInt();             
        }
        return  -1;
    }
    
    public static void getDatos(DatosTabla dt,Hashtable ht,int avcId) throws SQLException
    {
        String s="select * from albventra where avc_id = "+avcId;
        if (!dt.select(s))
            return;
        do
        {
            String tipo=dt.getString("avt_tipo");
            switch (tipo)
            {
                case CAJAS:
                     ht.put("avt_numcaj",dt.getInt("avt_unid"));
                     break;
                case BOLSAS:
                    ht.put("avt_numbol",dt.getInt("avt_unid"));                    
                    break;
                case COLGADO:
                    ht.put("avt_numcol",dt.getInt("avt_unid"));
                    break;
                case PALETS:
                    ht.put("avt_numpal",dt.getInt("avt_unid"));
            }  
        } while (dt.next());
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cLabel1 = new gnu.chu.controles.CLabel();
        tra_codiE = new gnu.chu.controles.CLinkBox();
        cLabel2 = new gnu.chu.controles.CLabel();
        avc_connomE = new gnu.chu.controles.CTextField(Types.CHAR,"X",50);
        cLabel3 = new gnu.chu.controles.CLabel();
        avc_connifE = new gnu.chu.controles.CTextField(Types.CHAR,"X",30);
        cLabel4 = new gnu.chu.controles.CLabel();
        avc_fecfraE = new gnu.chu.controles.CTextField(Types.DATE,"dd-MM-yyyy");
        cLabel5 = new gnu.chu.controles.CLabel();
        avc_matri2 = new gnu.chu.controles.CTextField(Types.CHAR,"X",20);
        avc_matri1 = new gnu.chu.controles.CTextField(Types.CHAR,"X",20);
        cLabel7 = new gnu.chu.controles.CLabel();
        Pbultra = new gnu.chu.controles.CPanel();
        cLabel11 = new gnu.chu.controles.CLabel();
        avt_numpalE = new gnu.chu.controles.CTextField(Types.DECIMAL,"##9");
        cLabel9 = new gnu.chu.controles.CLabel();
        avt_numcajE = new gnu.chu.controles.CTextField(Types.DECIMAL,"##9");
        cLabel8 = new gnu.chu.controles.CLabel();
        avt_numbolE = new gnu.chu.controles.CTextField(Types.DECIMAL,"##9");
        cLabel10 = new gnu.chu.controles.CLabel();
        avt_numcolE = new gnu.chu.controles.CTextField(Types.DECIMAL,"##9");

        setLayout(null);

        cLabel1.setText("Conductor");
        add(cLabel1);
        cLabel1.setBounds(10, 30, 90, 17);

        tra_codiE.setFormato(Types.DECIMAL, "##9");
        tra_codiE.setAncTexto(40);
        add(tra_codiE);
        tra_codiE.setBounds(100, 10, 290, 17);

        cLabel2.setText("Transportista");
        add(cLabel2);
        cLabel2.setBounds(10, 11, 90, 15);
        add(avc_connomE);
        avc_connomE.setBounds(100, 30, 290, 17);

        cLabel3.setText("N.I.F.");
        add(cLabel3);
        cLabel3.setBounds(10, 50, 40, 17);
        add(avc_connifE);
        avc_connifE.setBounds(100, 50, 120, 17);

        cLabel4.setText("Matricula");
        add(cLabel4);
        cLabel4.setBounds(10, 70, 60, 17);
        add(avc_fecfraE);
        avc_fecfraE.setBounds(140, 110, 80, 17);

        cLabel5.setText("Fecha Transporte ");
        add(cLabel5);
        cLabel5.setBounds(10, 110, 110, 17);

        avc_matri2.setMayusc(true);
        add(avc_matri2);
        avc_matri2.setBounds(100, 90, 120, 17);

        avc_matri1.setMayusc(true);
        add(avc_matri1);
        avc_matri1.setBounds(100, 70, 120, 17);

        cLabel7.setText("Matricula 2");
        add(cLabel7);
        cLabel7.setBounds(10, 90, 70, 17);

        Pbultra.setBorder(javax.swing.BorderFactory.createTitledBorder("Bultos Transporte"));
        Pbultra.setLayout(null);

        cLabel11.setText("Palets");
        Pbultra.add(cLabel11);
        cLabel11.setBounds(10, 20, 50, 17);

        avt_numpalE.setText("0");
        Pbultra.add(avt_numpalE);
        avt_numpalE.setBounds(60, 20, 30, 17);

        cLabel9.setText("Cajas");
        Pbultra.add(cLabel9);
        cLabel9.setBounds(100, 20, 40, 17);

        avt_numcajE.setText("0");
        Pbultra.add(avt_numcajE);
        avt_numcajE.setBounds(150, 20, 30, 17);

        cLabel8.setText("Bolsas");
        Pbultra.add(cLabel8);
        cLabel8.setBounds(10, 40, 50, 17);

        avt_numbolE.setText("0");
        Pbultra.add(avt_numbolE);
        avt_numbolE.setBounds(60, 40, 30, 17);

        cLabel10.setText("Colgado");
        Pbultra.add(cLabel10);
        cLabel10.setBounds(100, 40, 50, 17);

        avt_numcolE.setText("0");
        Pbultra.add(avt_numcolE);
        avt_numcolE.setBounds(150, 40, 30, 17);

        add(Pbultra);
        Pbultra.setBounds(10, 140, 190, 80);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gnu.chu.controles.CPanel Pbultra;
    private gnu.chu.controles.CTextField avc_connifE;
    private gnu.chu.controles.CTextField avc_connomE;
    private gnu.chu.controles.CTextField avc_fecfraE;
    private gnu.chu.controles.CTextField avc_matri1;
    private gnu.chu.controles.CTextField avc_matri2;
    private gnu.chu.controles.CTextField avt_numbolE;
    private gnu.chu.controles.CTextField avt_numcajE;
    private gnu.chu.controles.CTextField avt_numcolE;
    private gnu.chu.controles.CTextField avt_numpalE;
    private gnu.chu.controles.CLabel cLabel1;
    private gnu.chu.controles.CLabel cLabel10;
    private gnu.chu.controles.CLabel cLabel11;
    private gnu.chu.controles.CLabel cLabel2;
    private gnu.chu.controles.CLabel cLabel3;
    private gnu.chu.controles.CLabel cLabel4;
    private gnu.chu.controles.CLabel cLabel5;
    private gnu.chu.controles.CLabel cLabel7;
    private gnu.chu.controles.CLabel cLabel8;
    private gnu.chu.controles.CLabel cLabel9;
    private gnu.chu.controles.CLinkBox tra_codiE;
    // End of variables declaration//GEN-END:variables
}
