package gnu.chu.anjelica.ventas;

import gnu.chu.controles.CPanel;
import gnu.chu.sql.DatosTabla;
import gnu.chu.utilidades.ventanaPad;
import java.sql.SQLException;
import java.sql.Types;


/**
 *
 * <p>Titulo: pstockAct </p>
 * <p>Descripción: Panel Auxiliar para Mantenimiento Albaran ventas. 
 * Muestra cantidad preparada de un pedido,
 * comentarios de porque se ha  preparadao esa cantidad y el usuario que hace la anotacion</p>
* <p>Copyright: Copyright (c) 2005-2018
 *  Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo
 *  los terminos de la Licencia Pública General de GNU seg�n es publicada por
 *  la Free Software Foundation, bien de la versión 2 de dicha Licencia
 *  o bien (según su elección) de cualquier versión posterior.
 *  Este programa se distribuye con la esperanza de que sea útil,
 *  pero SIN NINGUNA GARANTIA, incluso sin la garantía MERCANTIL implícita
 *  o sin garantizar la CONVENIENCIA PARA UN PROPOSITO PARTICULAR.
 *  Véase la Licencia Pública General de GNU para más detalles.
 *  Debería haber recibido una copia de la Licencia Pública General junto con este programa.
 *  Si no ha sido así, escriba a la Free Software Foundation, Inc.,
 *  en 675 Mass Ave, Cambridge, MA 02139, EEUU.
 * </p>
 * @author chuchiP
 * @version 1.0
 *
 */
public class PConfPedVen extends CPanel
{   
    ventanaPad papa;
    int empCodi,pvcAno;    
    int pvcNume,pvlNumlin;
    DatosTabla dtAdd;
    
    public PConfPedVen() {
       
        initComponents();
    }
    
    void iniciar(ventanaPad padre)
    {
        this.papa=padre;       
        dtAdd=papa.dtAdd;
    }
    
   /**
    * Establece el pedido sobre el que se trabajara
    * @param empresa
    * @param ejercicio
    * @param pedido 
    */
    public void setPedido(int empresa,int ejercicio,int pedido)
    {
       this.empCodi=empresa;
       this.pvcAno=ejercicio;
       this.pvcNume=pedido;
    }
    /**
     * Establece la linea del pedido. Actualiza los TextFields
     * @param lineaPedido 
     */
    public void setLineaPedido(int lineaPedido)
    {
        try
        {
            pvlNumlin=lineaPedido;
            if (!buscaModPed(empCodi,pvcAno,pvcNume,pvlNumlin,false))
            {
                resetTexto();
                return;
            }
            pvm_cantiE.setValorDec(dtAdd.getDouble("pvm_canti"));
            pvm_comentE.setText(dtAdd.getString("pvm_coment"));
            usu_nombE.setText(dtAdd.getString("usu_nomb"));
            pvm_fechaE.setText(dtAdd.getFecha("pvm_fecha", "dd-MM-yyyy hh:mm"));
        } catch (SQLException ex)
        {
            papa.Error("Error al buscar Modficacion de Pedido", ex);
        }
    }
   
    @Override
    public void resetTexto()
    {
        if (pvm_cantiE==null)
            return;
        pvm_cantiE.resetTexto();
        pvm_comentE.resetTexto();
        pvm_fechaE.resetTexto();
        usu_nombE.resetTexto();
    }

    private boolean buscaModPed(int empCodi,int pvcAno,int pvcNume,int pvlNumlin,boolean update) throws SQLException
    {
        if (papa==null)
            return false;
        if (papa.muerto )
            return false;      
        String s= "select * from pedvenmod as p "+
            " where emp_codi ="+empCodi+
            " and eje_nume = " + pvcAno +
            " and pvc_nume = " + pvcNume+
            " and pvl_numlin= "+pvlNumlin;
        return dtAdd.select(s,update);        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pvm_cantiE = new gnu.chu.controles.CTextField(Types.DECIMAL,"##9");
        cLabel2 = new gnu.chu.controles.CLabel();
        usu_nombE = new gnu.chu.controles.CTextField();
        cLabel3 = new gnu.chu.controles.CLabel();
        pvm_fechaE = new gnu.chu.controles.CTextField();
        cLabel4 = new gnu.chu.controles.CLabel();
        pvm_comentE = new gnu.chu.controles.CTextField(Types.CHAR,"X",40);

        setLayout(null);

        pvm_cantiE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pvm_cantiEFocusLost(evt);
            }
        });
        add(pvm_cantiE);
        pvm_cantiE.setBounds(60, 2, 30, 17);

        cLabel2.setText("Coment.");
        add(cLabel2);
        cLabel2.setBounds(100, 2, 60, 17);

        usu_nombE.setEnabled(false);
        add(usu_nombE);
        usu_nombE.setBounds(470, 2, 90, 17);

        cLabel3.setText("Usuario");
        add(cLabel3);
        cLabel3.setBounds(420, 2, 50, 17);

        pvm_fechaE.setEnabled(false);
        add(pvm_fechaE);
        pvm_fechaE.setBounds(570, 2, 110, 17);

        cLabel4.setText("Cantidad");
        add(cLabel4);
        cLabel4.setBounds(2, 2, 60, 17);

        pvm_comentE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pvm_comentEFocusLost(evt);
            }
        });
        add(pvm_comentE);
        pvm_comentE.setBounds(160, 2, 250, 17);
    }// </editor-fold>//GEN-END:initComponents

    private void pvm_cantiEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pvm_cantiEFocusLost
        actualPedVen();
     
    }//GEN-LAST:event_pvm_cantiEFocusLost
    void actualPedVen()
    {
           try
        {
            if (pvcAno==0 || pvlNumlin==0)
                return;
            boolean swExi=buscaModPed(empCodi,pvcAno,pvcNume,pvlNumlin,true);
            
            
            if (! swExi && pvm_cantiE.getValorDec()==0 && pvm_comentE.isNull(true))
                    return;
            if (!swExi)
            {
                dtAdd.addNew();
                dtAdd.setDato("emp_codi",empCodi);
                dtAdd.setDato("eje_nume",pvcAno);
                dtAdd.setDato("pvc_nume",pvcNume);
                dtAdd.setDato("pvl_numlin",pvlNumlin);
            }
            else
            {
                if (pvm_cantiE.getValorDec()==dtAdd.getDouble("pvm_canti") 
                    && pvm_comentE.getText().equals(dtAdd.getString("pvm_coment")))
                { // NO hay cambios. No hago nada.
                    dtAdd.commit();
                    return;
                }
                dtAdd.edit();
            }
            dtAdd.setDato("pvm_canti",pvm_cantiE.getValorDec());
            dtAdd.setDato("pvm_coment",pvm_comentE.getText());
            dtAdd.setDato("usu_nomb",papa.EU.usuario);
            dtAdd.setDato("pvm_fecha","current_timestamp");
            dtAdd.update();
            papa.mensajeRapido("Actualizada Cantidad/Comentario preparada para pedido ");
            dtAdd.commit();
            actualCanti(pvm_cantiE.getValorDec());
        } catch (SQLException ex)
        {
           papa.Error("Error al actualizar de Pedido", ex);
        }
    }
    private void pvm_comentEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pvm_comentEFocusLost
        actualPedVen();
    }//GEN-LAST:event_pvm_comentEFocusLost
    /**
     * Funcion a machacar para hacer algo cuando se actualize la cantidad
     * @param cantidad 
     */
    public void actualCanti(double cantidad)
    {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gnu.chu.controles.CLabel cLabel2;
    private gnu.chu.controles.CLabel cLabel3;
    private gnu.chu.controles.CLabel cLabel4;
    private gnu.chu.controles.CTextField pvm_cantiE;
    private gnu.chu.controles.CTextField pvm_comentE;
    private gnu.chu.controles.CTextField pvm_fechaE;
    private gnu.chu.controles.CTextField usu_nombE;
    // End of variables declaration//GEN-END:variables
}
