
package gnu.chu.hylafax;

import gnu.chu.anjelica.facturacion.lisfactu;
import gnu.chu.anjelica.ventas.lialbven;
import gnu.chu.utilidades.Iconos;
import gnu.chu.utilidades.ventana;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.sql.Types;

/**
 *
 * <p>Titulo: IFFax </p>
 * <p>Descripción: Ventana para mandar por fax las facturas</p>
 * <p>Copyright: Copyright (c) 2005-2015
 *  Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo
 *  los terminos de la Licencia Pública General de GNU según es publicada por
 *  la Free Software Foundation, bien de la versión 2 de dicha Licencia
 *  o bien (según su elección) de cualquier versión posterior.
 *  Este programa se distribuye con la esperanza de que sea útil,ed
 *  pero SIN NINGUNA GARANTIA, incluso sin la garantía MERCANTIL implícita
 *  o sin garantizar la CONVENIENCIA PARA UN PROPOSITO PARTICULAR.
 *  Véase la Licencia Pública General de GNU para más detalles.
 *  Debería haber recibido una copia de la Licencia Pública General junto con este programa.
 *  Si no ha sido así, escriba a la Free Software Foundation, Inc.,
 *  en 675 Mass Ave, Cambridge, MA 02139, EEUU.
 * </p>
 * @author chuchiP
 * @version 1.0 Inicial
 */
public class IFFax extends ventana {
    private ventana padre;
    lialbven liAlb = null;
    lisfactu liFra = null;
    String tipoDoc;
//    String docSerie;
//    int empCodi,docAno,docNume;
    boolean opValora;
    String sqlDoc;


    public IFFax() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cli_codiE = new gnu.chu.camposdb.cliPanel();
        cLabel1 = new gnu.chu.controles.CLabel();
        cLabel2 = new gnu.chu.controles.CLabel();
        cli_faxE = new gnu.chu.controles.CTextField(Types.CHAR,"X",12);
        opCopia = new gnu.chu.controles.CCheckBox();
        cLabel3 = new gnu.chu.controles.CLabel();
        scmsgE = new javax.swing.JScrollPane();
        respuestE = new gnu.chu.controles.CTextArea();
        BacepFax = new gnu.chu.controles.CButton(Iconos.getImageIcon("check"));
        BcancFax = new gnu.chu.controles.CButton(Iconos.getImageIcon("cancel"));

        setTitle("Enviar Fax");

        cLabel1.setText("Cliente");

        cLabel2.setText("Fax");

        opCopia.setText("Imprimir copia a Papel");

        cLabel3.setBackground(java.awt.Color.blue);
        cLabel3.setForeground(new java.awt.Color(255, 255, 255));
        cLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cLabel3.setText("Introduzca un texto a acompañar al Documento");
        cLabel3.setOpaque(true);

        scmsgE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        respuestE.setBorder(null);
        respuestE.setColumns(20);
        respuestE.setRows(5);
        scmsgE.setViewportView(respuestE);

        BacepFax.setText("Aceptar");

        BcancFax.setText("Cancelar");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(BacepFax, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 156, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(127, 127, 127)
                        .add(BcancFax, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 156, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(25, 25, 25))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(layout.createSequentialGroup()
                                    .add(cLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(4, 4, 4)
                                    .add(cli_faxE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 161, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(opCopia, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))
                                .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                    .add(cLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(cli_codiE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                            .add(12, 12, 12))
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                            .add(cLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                            .addContainerGap())
                        .add(layout.createSequentialGroup()
                            .add(scmsgE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                            .addContainerGap()))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(cLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cli_codiE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cli_faxE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(opCopia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(scmsgE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(BacepFax, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(BcancFax, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void iniciar(ventana padre) throws SQLException
    {
        this.padre=padre;
        dtStat=padre.dtStat;
        this.EU=padre.EU;
        this.ct=padre.ct;
        cli_codiE.iniciar(dtStat, this, padre.vl, EU);
        activarEventos();
    }
    public void setLialbven(lialbven liAlb)
    {
       this.liAlb=liAlb;
    }
    public void setLisfactu (lisfactu liFra)
    {
        this.liFra=liFra;
    }
    public void setCliCodi(String cliCodi)
    {
        cli_codiE.setText(cliCodi);
    }
    public gnu.chu.camposdb.cliPanel getCliField()
    {
        return cli_codiE;
    }
    public void setCopiaPapel(boolean copiaPapel)
    {
        opCopia.setSelected(copiaPapel);
    }
    public boolean getCopiaPapel()
    {
        return opCopia.isSelected();
    }
    public void setNumFax(String numfax)
    {
        if (! numfax.equals(""))
        {
          numfax = numfax.replaceAll("/", "");
          numfax = numfax.replaceAll("\\.", "");
          numfax = numfax.replaceAll("-", "");
        }
        cli_faxE.setText(numfax);
        respuestE.requestFocus();
    }
    public void setDatosDoc( String tipoDoc,
         String sqlDoc,
         boolean opValora)
    {
         this.tipoDoc=tipoDoc;
         this.sqlDoc=sqlDoc;
         this.opValora=opValora;
    }
    private void activarEventos() {
        BacepFax.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e) {
                enviarFax();
            }
        });
        BcancFax.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e) {
                padre.mensajeErr("Fax ... CANCELADO");
                cancelFax();
            }
        });
    }
    void enviarFax()
    {
      if (cli_faxE.isNull(true) )
      {
        msgBox("Introduzca No de Fax del Cliente");
        return;
      }
        if (tipoDoc.equals("A"))
            enviarFaxAlb();
        else
            enviarFaxFra();
    }
    void enviarFaxFra()
    {
        try {
      liFra.sendFraFax(sqlDoc, cli_faxE.getText(), cli_codiE.getValorInt(),opCopia.isSelected() );
      cancelFax();
      padre.mensajeErr("Fax ..... Enviado");
    }
    catch (Exception k)
    {
      Error("Error al enviar Albaran por Fax por usuario: "+EU.usuario, k);
    }
    }
    void enviarFaxAlb()
    {
    try
    {
     
//      String sqlAlb = "SELECT c.emp_codi as avc_empcod, c.*,cl.*" +
//          " FROM V_albavec as c,clientes cl WHERE c.avc_ano =" + docAno +
//          " and c.emp_codi = " + empCodi+
//          " and c.avc_serie = '" + docSerie + "'" +
//          " and c.avc_nume = " + docNume +
//          " and c.cli_codi = cl.cli_codi ";
      liAlb.envAlbarFax(ct.getConnection(), dtStat, sqlDoc, EU,
                        opValora,cli_faxE.getText(),
                        respuestE.getText(),opCopia.isSelected(),1);
      cancelFax();
      padre.mensajeErr("Fax ..... Enviado");
    }
    catch (Exception k)
    {
      Error("Error al enviar Albaran por Fax por usuario: "+EU.usuario, k);
    }
  }

  void cancelFax()
  {
    padre.setEnabled(true);
    this.setVisible(false);
    try
    {
      this.setSelected(true);
    } catch (Exception k) { }
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gnu.chu.controles.CButton BacepFax;
    private gnu.chu.controles.CButton BcancFax;
    private gnu.chu.controles.CLabel cLabel1;
    private gnu.chu.controles.CLabel cLabel2;
    private gnu.chu.controles.CLabel cLabel3;
    private gnu.chu.camposdb.cliPanel cli_codiE;
    private gnu.chu.controles.CTextField cli_faxE;
    private gnu.chu.controles.CCheckBox opCopia;
    private gnu.chu.controles.CTextArea respuestE;
    private javax.swing.JScrollPane scmsgE;
    // End of variables declaration//GEN-END:variables

}
