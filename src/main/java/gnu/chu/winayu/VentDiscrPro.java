/**
 *
 * <p>Titulo: VentDiscrCli</p>
 * <p>Descripcion: Ventana que saca los discriminadores,  de
 * los productos. Creando la sentencia SQL para poder buscar los productos
 * por esos conceptos.
 * </p>
 * <p>Copyright: Copyright (c) 2005-2020
 *  Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo
 *  los terminos de la Licencia Pública General de GNU según es publicada por
 *  la Free Software Foundation, bien de la versión 2 de dicha Licencia
 *  o bien (según su elección) de cualquier versión posterior.
 *  Este programa se distribuye con la esperanza de que sea útil,
 *  pero SIN NINGUNA GARANTIA, incluso sin la garantía MERCANTIL implícita
 *  o sin garantizar la CONVENIENCIA PARA UN PROPOSITO PARTICULAR.
 *  Véase la Licencia Pública General de GNU para más detalles.
 *  Debería haber recibido una copia de la Licencia Pública General junto con este programa.
 *  Si no ha sido así, escriba a la Free Software Foundation, Inc.,
 *  en 675 Mass Ave, Cambridge, MA 02139, EEUU.
 * </p>
 * <p>Empresa: miSL</p>
 * @author chuchi P
 */

package gnu.chu.winayu;


import gnu.chu.controles.CInternalFrame;
import gnu.chu.controles.StatusBar;
import gnu.chu.sql.DatosTabla;
import gnu.chu.utilidades.EntornoUsuario;
import gnu.chu.utilidades.Iconos;
import gnu.chu.utilidades.ventana;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

public class VentDiscrPro extends ventana {
    DatosTabla dt;
    private boolean aceptado=false;
    CInternalFrame papa;


    public boolean isAceptado() {
        return aceptado;
    }

    public void setAceptado(boolean aceptado) {
        this.aceptado = aceptado;
    }

    /** Creates new form VentDiscrCli */
    public VentDiscrPro() {
        this.setTitle("Discriminadores Articulos");

        this.setVersion("2010-12-16");
        statusBar = new StatusBar(this);

        initComponents();
        this.setSize(300, 302);
        this.getContentPane().add(statusBar, BorderLayout.SOUTH);
        this.setVisibleCabeceraVentana(false);
//        BasicInternalFrameUI miUi = (BasicInternalFrameUI)this.getUI();
//        miUi.setNorthPane(null); // Para quitar el titulo a la ventana
    }

    public void iniciar(DatosTabla dt,EntornoUsuario EU,CInternalFrame papa) throws SQLException
    {
        this.dt=dt;
        this.EU=EU;
        this.papa=papa;

        dp.iniciar(dt,EU);
     
     
        activarEventos();
    }
    public void resetTexto()
    {
        Pprinc.resetTexto();
    }
    @Override
    public void requestFocus()
    {
        if (dp!=null)
            dp.requestFocus();
      
    }
/**
 * Devuelve las condiciones WHERE (siempre empiezan con un 'AND'
 * @param aliasProducto
 * @return
 */
    public String getCondWhere(String aliasProducto)
    {
        return dp.getCondWhere(aliasProducto);
    }
    void activarEventos()
    {
      bAceptar.addActionListener(new ActionListener()
      {
            public void actionPerformed(ActionEvent e) {
                aceptado=true;
                matar();
            }
        });
      Blimpiar.addActionListener(new ActionListener()
      {
            public void actionPerformed(ActionEvent e) {
               dp.limpiar();
            }
      });
    }
  
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Pprinc = new gnu.chu.controles.CPanel();
        bAceptar = new gnu.chu.controles.CButton("Aceptar (F4)",Iconos.getImageIcon("check"));
        dp = new gnu.chu.camposdb.DiscProPanel();
        Blimpiar = new gnu.chu.controles.CButton(Iconos.getImageIcon("reload"));

        Pprinc.setDefButton(bAceptar);

        dp.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        Blimpiar.setToolTipText("Limpiar texto");

        org.jdesktop.layout.GroupLayout PprincLayout = new org.jdesktop.layout.GroupLayout(Pprinc);
        Pprinc.setLayout(PprincLayout);
        PprincLayout.setHorizontalGroup(
            PprincLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PprincLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(PprincLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, PprincLayout.createSequentialGroup()
                        .add(dp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, PprincLayout.createSequentialGroup()
                        .add(bAceptar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(168, 168, 168)
                        .add(Blimpiar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(23, 23, 23))))
        );
        PprincLayout.setVerticalGroup(
            PprincLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PprincLayout.createSequentialGroup()
                .add(dp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(29, 29, 29)
                .add(PprincLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(bAceptar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(Blimpiar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        getContentPane().add(Pprinc, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gnu.chu.controles.CButton Blimpiar;
    private gnu.chu.controles.CPanel Pprinc;
    private gnu.chu.controles.CButton bAceptar;
    private gnu.chu.camposdb.DiscProPanel dp;
    // End of variables declaration//GEN-END:variables

}
