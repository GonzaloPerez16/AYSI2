package gnu.chu.utilidades;

import gnu.chu.controles.CPanel;
import gnu.chu.sql.DatosTabla;
import java.sql.SQLException;
import java.sql.Types;

/**
 *
 * <p>Título: PanelArticVenta </p>
 * <p>Descripcion: Panel de Articulos de Venta</p>
 * <p>Empresa: miSL</p>
*  <p>Copyright: Copyright (c) 2005-2016
 *  Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo
 *  los terminos de la Licencia Pública General de GNU según es publicada por
 *  la Free Software Foundation, bien de la versión 2 de dicha Licencia
 *  o bien (según su elección) de cualquier versión posterior.
 *  Este programa se distribuye con la esperanza de que sea útil,ed
 *  pero SIN NINGUNA GARANTIA, incluso sin la garantía MERCANTIL implícita
 *  o sin garantizar la CONVENIENCIA PARA UN PROPOSITO PARTICULAR.
 *  Véase la Licencia Pública General de GNU para más detalles.
 *  Debería haber recibido una copia de la Licencia Pública General junto con este programa.
 *  Si no ha sido así, escriba a la Free Software Foundation, Inc.,
 *  en 675 Mass Ave, Cambridge, MA 02139, EEUU.
 * </p>
 * @author ChuchiP
 * @version 1.0
 */ 
public class PanelArticVenta extends CPanel
{

    /**
     * Creates new form PanelArticVenta
     */
    public PanelArticVenta() {
        initComponents();
    }
    public void iniciar(DatosTabla dt) throws SQLException
    {
        pve_curacE.setColumnaAlias("pve_curac");
        pve_congE.setColumnaAlias("pve_cong");
        pve_corteE.setColumnaAlias("pve_corte");
         String s="select * from v_tipoanimal order by dpv_nomb";
        dt.select(s);
        dpv_tipaniE.addDatos(dt);
        s="select * from v_tipocorte order by dpv_nomb";
        dt.select(s);
        dpv_tipcorE.addDatos(dt);
        s="select * from v_clasiprod order by dpv_nomb";
        dt.select(s);
        dpv_calidadE.addDatos(dt);
    }
    @Override
    public void setQuery(boolean b)
    {
        super.setQuery(b);
        resetTexto();
        dpv_calidadE.setQuery(false);
        dpv_tipcorE.setQuery(false);
        dpv_tipaniE.setQuery(false);
    }
    
    public void resetTexto()
    {
        super.resetTexto();
        dpv_calidadE.setText("");
        dpv_tipcorE.setText("");
        dpv_tipaniE.setText("");
    }
    public String getCongeladoQuery()
    {
       return pve_congE.getStrQuery();
    }
    public String getCorteQuery()
    {
       return pve_corteE.getStrQuery();
    }
    public String getCuracionQuery()
    {
       return pve_curacE.getStrQuery();
    }
    public void setValorCongelado(int valor)
    {
        pve_congE.setValor(valor);
    }
    public void setValorCorte(int valor)
    {
        pve_corteE.setValor(valor);
    }
    public void setValorCurado(int valor)
    {
        pve_curacE.setValor(valor);
    }

    public int getValorCongelado()
    {
        return pve_congE.getValorInt();
    }
    public int getValorCorte()
    {
       return pve_corteE.getValorInt();
    }
    public int getValorCurado()
    {
       return  pve_curacE.getValorInt();
    }
    public String getCondicionesQuery(boolean incWhere)
    {
         String cond="";
        if (!dpv_tipaniE.getText().isEmpty())
            cond+=dpv_tipaniE.getText();
        if (!dpv_tipcorE.getText().isEmpty())
            cond+= (cond.isEmpty()?"__":"")+
                (dpv_tipcorE.getText().length()<3 && !dpv_tipcorE.getText().contains("%") ?
                Formatear.llenar('0',3-dpv_tipcorE.getText().length()):"") +
                dpv_tipcorE.getText();
        if (!dpv_clapesE.getText().isEmpty())
            cond+= (cond.isEmpty()?"_____":"")+ "%"+dpv_clapesE.getText();
        if (!dpv_calidadE.getText().isEmpty())
            cond+= (cond.isEmpty()?"_____":"")+ "%"+dpv_calidadE.getText();
    
        if (! cond.isEmpty())
            cond= (incWhere?" where":" and")+"  pve_codi  like '"+cond+"%'";
        return cond;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cLabel8 = new gnu.chu.controles.CLabel();
        cLabel10 = new gnu.chu.controles.CLabel();
        dpv_tipaniE = new gnu.chu.controles.CLinkBox();
        dpv_tipcorE = new gnu.chu.controles.CLinkBox();
        cLabel12 = new gnu.chu.controles.CLabel();
        dpv_clapesE = new gnu.chu.controles.CTextField(Types.DECIMAL,"99");
        cLabel13 = new gnu.chu.controles.CLabel();
        dpv_calidadE = new gnu.chu.controles.CLinkBox();
        cLabel14 = new gnu.chu.controles.CLabel();
        pve_congE = new gnu.chu.controles.CComboBox();
        cLabel15 = new gnu.chu.controles.CLabel();
        pve_corteE = new gnu.chu.controles.CComboBox();
        cLabel16 = new gnu.chu.controles.CLabel();
        pve_curacE = new gnu.chu.controles.CComboBox();

        setLayout(null);

        cLabel8.setText("Corte");
        add(cLabel8);
        cLabel8.setBounds(0, 23, 40, 17);

        cLabel10.setText("Tipo Animal");
        add(cLabel10);
        cLabel10.setBounds(0, 3, 70, 17);

        dpv_tipaniE.setAncTexto(30);
        dpv_tipaniE.setFormato(Types.CHAR,"X",2);
        dpv_tipaniE.setMayusculas(true);
        add(dpv_tipaniE);
        dpv_tipaniE.setBounds(70, 3, 300, 18);

        dpv_tipcorE.setAncTexto(30);
        dpv_tipcorE.setFormato(Types.CHAR,"X",3);
        dpv_tipcorE.setMayusculas(true);
        add(dpv_tipcorE);
        dpv_tipcorE.setBounds(70, 23, 300, 17);

        cLabel12.setText("Clasif. Peso");
        add(cLabel12);
        cLabel12.setBounds(0, 42, 70, 18);
        add(dpv_clapesE);
        dpv_clapesE.setBounds(70, 42, 30, 18);

        cLabel13.setText("Congelado");
        add(cLabel13);
        cLabel13.setBounds(0, 82, 70, 18);

        dpv_calidadE.setAncTexto(30);
        dpv_tipcorE.setFormato(Types.CHAR,"X",3);
        dpv_tipcorE.setMayusculas(true);
        add(dpv_calidadE);
        dpv_calidadE.setBounds(70, 62, 300, 18);

        cLabel14.setText("Calidad");
        add(cLabel14);
        cLabel14.setBounds(0, 62, 60, 18);

        pve_congE.addItem("NO","0");
        pve_congE.addItem("Si","-1");
        add(pve_congE);
        pve_congE.setBounds(70, 82, 60, 17);

        cLabel15.setText("Corte");
        add(cLabel15);
        cLabel15.setBounds(140, 82, 50, 18);

        pve_corteE.addItem("NO","0");
        pve_corteE.addItem("Si","-1");
        add(pve_corteE);
        pve_corteE.setBounds(190, 82, 60, 17);

        cLabel16.setText("Curado");
        add(cLabel16);
        cLabel16.setBounds(260, 82, 50, 18);

        pve_curacE.addItem("NO","0");
        pve_curacE.addItem("Si","-1");
        add(pve_curacE);
        pve_curacE.setBounds(310, 82, 60, 17);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gnu.chu.controles.CLabel cLabel10;
    private gnu.chu.controles.CLabel cLabel12;
    private gnu.chu.controles.CLabel cLabel13;
    private gnu.chu.controles.CLabel cLabel14;
    private gnu.chu.controles.CLabel cLabel15;
    private gnu.chu.controles.CLabel cLabel16;
    private gnu.chu.controles.CLabel cLabel8;
    private gnu.chu.controles.CLinkBox dpv_calidadE;
    private gnu.chu.controles.CTextField dpv_clapesE;
    private gnu.chu.controles.CLinkBox dpv_tipaniE;
    private gnu.chu.controles.CLinkBox dpv_tipcorE;
    private gnu.chu.controles.CComboBox pve_congE;
    private gnu.chu.controles.CComboBox pve_corteE;
    private gnu.chu.controles.CComboBox pve_curacE;
    // End of variables declaration//GEN-END:variables
}
